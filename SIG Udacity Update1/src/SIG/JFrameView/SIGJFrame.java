/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SIG.JFrameView;

import controller.ActionHandler;
//import controller.TableSelectionListnerSIG;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.event.ListSelectionListener;
//import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import model.InvoiceHeaderSIG;
import model.InvoiceHeaderTableSIG;
import model.InvoiceLineTableSIG;

/**
 *
 * @author MUSLIM
 */
public class SIGJFrame extends javax.swing.JFrame {

    public static Object getInvoiceHeaderTableSIG() {
        return null;
    }

    public static Object getInvoiceLineTableSIG() {
        return null;
    }

    public static int getInvHeaderListSIG(int selectedRow) {
        return 0;

    }

    public static void setInvoiceHeaderSIG(ArrayList<InvoiceHeaderSIG> InvHeaderListSIG) {
    }

    public static void getInvObject() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public static InvoiceHeaderSIG getObject() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    //  private ListSelectionListener tableSelectionListnerSIG;
    //  private ListSelectionListener InvoiceActionListnerSIG;
    private ListSelectionListener InvoiceActionListnerSIG;

    /**
     * Creates new form SIGJFrame
     */
    public SIGJFrame() {
        controller = new ActionHandler(this); // de initialize controller here instead of below to prevent breaking oop rules {encapsulation}
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InvHeaderTableSIG = new javax.swing.JTable();
        InvHeaderTableSIG.getSelectionModel().addListSelectionListener(InvoiceActionListnerSIG);
        jButton1 = new javax.swing.JButton();
        jButton1.addActionListener(controller);
        jButton2 = new javax.swing.JButton();
        jButton2.addActionListener(controller);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        InvLineTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton3.addActionListener(controller);
        jButton4 = new javax.swing.JButton();
        jButton4.addActionListener(controller);
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem3.addActionListener(controller);
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem1.addActionListener(controller);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InvHeaderTableSIG.setModel(InvHeaderTableSIG.getModel());
        jScrollPane1.setViewportView(InvHeaderTableSIG);

        jButton1.setText("Create New Invoice");

        jButton2.setText("Delete Invoice");

        jLabel1.setText("Invoice No");

        jLabel2.setText("Invoice Date");

        jLabel3.setText("Customer Name");

        jLabel4.setText("Total ");

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        InvLineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(InvLineTable);

        jButton3.setText("Create New Invoice Line ");

        jButton4.setText("Delete Invoice Line ");

        jMenu2.setText("File");

        jMenuItem3.setText("Load File");
        jMenu2.add(jMenuItem3);

        jMenuItem1.setText("Save File");
        jMenu2.add(jMenuItem1);

        jMenuBar2.add(jMenu2);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(86, 86, 86)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton4))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(32, 32, 32)
                        .addComponent(jButton2)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton1)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIGJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIGJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIGJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIGJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SIGJFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InvHeaderTableSIG;
    private javax.swing.JTable InvLineTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

// we need to Clarify for frame to know that there is an obj called controller 
    private final ActionHandler controller;
    private ArrayList<InvoiceHeaderSIG> InvoicesArrSIG;
    // private ArrayList<InvoiceLineTableSIG> InvLinesListSIG;

    //  private InvoiceHeaderTableSIG headerTableModelSIG;
//    private final TableSelectionListnerSIG tableSelectionListnerSIG = new TableSelectionListnerSIG(this);
    public ArrayList<InvoiceHeaderSIG> getInvoicesArrSIG() {
        return InvoicesArrSIG;
    }
  
    public InvoiceHeaderSIG getInvObject(int PartsSIG) {
        System.out.println("InvoicesArrSIG Is :" + InvoicesArrSIG); 
        System.out.println("PartsSIG Is :" + PartsSIG);
        for (InvoiceHeaderSIG inv : InvoicesArrSIG) {
            if (inv.getinvoiceNumber() == PartsSIG) {
                return inv;

            }
        }
        return null;

    }
    // public ArrayList<InvoiceLineTableSIG> getInvLinesListSIG() {
    //return InvLinesListSIG;
    // }

    //public void setLinesArray(ArrayList<InvoiceLineTableSIG> InvLinesListSIG) {
    //  this.InvLinesListSIG = InvLinesListSIG;
    // }
    public void setInvHeaderListSIG(ArrayList<InvoiceHeaderSIG> InvoicesArrSIG) {
        System.out.println("Length Of List : " + InvoicesArrSIG.get(1));
        this.InvoicesArrSIG = InvoicesArrSIG;
        //  headerTableModelSIG = new InvoiceHeaderTableSIG(InvHeaderListSIG);
        //   System.out.println("Count Header Is : " + headerTableModelSIG.getColumnCount());
        // this.InvHeaderTableSIG.setModel(headerTableModelSIG);

    }

    public ActionHandler getController() {
        return controller;
    }

    public JTable getInvHeaderTableSIG() {
        return InvHeaderTableSIG;
    }

    public javax.swing.JTable getInvHeaderTable() {
        return InvHeaderTableSIG;
    }

    public javax.swing.JTable getInvLineTable() {
        return InvLineTable;
    }

    public Object InvHeaderTableSIG() {
        return null;

    }

    ActionListener getActionHandler() {
        return null;
    }

    public void setInvoicesArrSIG(ArrayList<InvoiceHeaderSIG> InvHeaderListSIG) {
        this.InvoicesArrSIG =InvHeaderListSIG ;
    }

    public InvoiceHeaderSIG getInvObject(InvoiceHeaderSIG inv) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public class getInvHeaderTableSIG {

    }

}
